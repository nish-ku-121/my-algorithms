public class Solution {
    public String convert(String s, int numRows) {
        // base/corner cases
        if (s == null) {
            return null;
        }
        if (s.length() == 0 || numRows < 2) {
            return s;
        }
        
        // main case
        StringBuilder[] buckets = new StringBuilder[numRows];
        initialize(buckets);
        int zigZagger = 0;
        int direction = 1;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            buckets[zigZagger].append(c);
            if ((zigZagger == buckets.length - 1) && (direction == 1)) {
                direction = -1;
            }
            else if ((zigZagger == 0) && (direction == -1)) {
                direction = 1;
            }
            zigZagger += direction;
        }
        
        // put it all together
        StringBuilder converted = new StringBuilder();
        for (int i = 0; i < buckets.length; i++) {
            converted.append(buckets[i]);
        }
        
        return converted.toString();
    }
    
    private void initialize(StringBuilder[] builders) {
        for (int i = 0; i < builders.length; i++) {
            builders[i] = new StringBuilder();
        }
    }
}