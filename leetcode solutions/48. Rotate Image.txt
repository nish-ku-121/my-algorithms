'''
48. Rotate Image

https://leetcode.com/problems/rotate-image/

You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

Example 2:
Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]

Constraints:
- n == matrix.length == matrix[i].length
- 1 <= n <= 20
- (-1000) <= matrix[i][j] <= 1000
'''

class Solution:
    def rotate(self, matrix):
        """
        Do not return anything, modify matrix in-place instead.
        """
        def rotate_90(matrix, i, j, origin):
            '''
            i, j => j, n-1-(i)
            j, n-1-i => n-1-i, n-1-(j)
            n-1-i, n-1-j => n-1-j, i = n-1-(n-1-i)
            n-1-j, i => i, n-1-(n-1-j) = j
            '''
            new_i = j
            new_j = len(matrix)-1-i
            curr = matrix[i][j]
            if not (new_i == origin[0] and new_j == origin[1]):
                rotate_90(matrix, new_i, new_j, origin)
            matrix[new_i][new_j] = curr
         
        def rotate_ring(matrix, ring_origin):
            n = len(matrix[ring_origin[0]])
            for j in range(ring_origin[1], n-1-ring_origin[1]):
                origin = (ring_origin[0], j)
                rotate_90(matrix, origin[0], origin[1], origin)
                
        def rotate_all_rings(matrix):
            for i in range(((len(matrix)-1) // 2) + 1):
                rotate_ring(matrix, (i,i))
    
        # base/corner cases
        if matrix is None or len(matrix) == 0:
            return matrix
            
        # main case
        rotate_all_rings(matrix)


def pretty_print(matrix):
    for row in matrix:
        print(row)
    print()


sln = Solution()
matrix = [[1,2,3],[4,5,6],[7,8,9]]
pretty_print(matrix)
sln.rotate(matrix)
pretty_print(matrix)